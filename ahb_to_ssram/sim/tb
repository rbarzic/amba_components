#! /usr/bin/vvp
:ivl_version "0.9.7 " "(v0_9_7)";
:vpi_time_precision - 12;
:vpi_module "system";
:vpi_module "v2005_math";
:vpi_module "va_math";
S_0x1e25470 .scope module, "tb" "tb" 2 2;
 .timescale -9 -12;
P_0x1e25408 .param/l "AW" 2 11, +C4<01100>;
v0x1e94690_0 .net "HADDR", 11 0, v0x1e8eaf0_0; 1 drivers
v0x1e94730_0 .net "HRDATA", 31 0, L_0x1e96030; 1 drivers
v0x1e947b0_0 .net "HREADY", 0 0, v0x1e8ed20_0; 1 drivers
v0x1e94830_0 .net "HREADYOUT", 0 0, L_0x1e959f0; 1 drivers
v0x1e948b0_0 .net "HRESP", 0 0, C4<z>; 0 drivers
v0x1e94930_0 .net "HSEL", 0 0, v0x1e8ef80_0; 1 drivers
v0x1e949b0_0 .net "HSIZE", 2 0, v0x1e8f070_0; 1 drivers
v0x1e94a30_0 .net "HTRANS", 1 0, v0x1e8f110_0; 1 drivers
v0x1e94b00_0 .net "HWDATA", 31 0, v0x1e8f210_0; 1 drivers
v0x1e94b80_0 .net "HWRITE", 0 0, v0x1e8f2b0_0; 1 drivers
v0x1e94c00_0 .net "clk", 0 0, v0x1e8d490_0; 1 drivers
v0x1e94c80_0 .var "rst_async", 0 0;
v0x1e94d00_0 .net "rst_n", 0 0, v0x1e8d180_0; 1 drivers
v0x1e94e10_0 .var "tmp", 31 0;
v0x1e94f10_0 .var "tmp8", 7 0;
S_0x1e94460 .scope task, "check_32bits" "check_32bits" 3 18, 3 18, S_0x1e25470;
 .timescale -9 -12;
v0x1e94550_0 .var "expected", 31 0;
v0x1e945f0_0 .var "value", 31 0;
TD_tb.check_32bits ;
    %load/v 8, v0x1e945f0_0, 32;
    %load/v 40, v0x1e94550_0, 32;
    %cmp/u 8, 40, 32;
    %inv 6, 1;
    %jmp/0xz  T_0.0, 6;
    %vpi_call 3 23 "$display", "-E- Expected : %x, got %x", v0x1e94550_0, v0x1e945f0_0;
    %delay 10000, 0;
    %vpi_call 3 25 "$finish";
    %jmp T_0.1;
T_0.0 ;
    %vpi_call 3 29 "$display", "-I- Read : %x, got %x - OK", v0x1e94550_0, v0x1e945f0_0;
T_0.1 ;
    %end;
S_0x1e94270 .scope task, "check_8bits" "check_8bits" 3 1, 3 1, S_0x1e25470;
 .timescale -9 -12;
v0x1e94360_0 .var "expected", 7 0;
v0x1e943e0_0 .var "value", 7 0;
TD_tb.check_8bits ;
    %load/v 8, v0x1e943e0_0, 8;
    %load/v 16, v0x1e94360_0, 8;
    %cmp/u 8, 16, 8;
    %inv 6, 1;
    %jmp/0xz  T_1.2, 6;
    %vpi_call 3 6 "$display", "-E- Expected : %x, got %x", v0x1e94360_0, v0x1e943e0_0;
    %delay 10000, 0;
    %vpi_call 3 8 "$finish";
    %jmp T_1.3;
T_1.2 ;
    %vpi_call 3 12 "$display", "-I- Read : %x, got %x - OK", v0x1e94360_0, v0x1e943e0_0;
T_1.3 ;
    %end;
S_0x1e8f3c0 .scope module, "U_CHIP" "chip" 2 33, 4 33, S_0x1e25470;
 .timescale -9 -12;
P_0x1e8eec8 .param/l "AW" 4 40, +C4<01100>;
v0x1e93430_0 .alias "HADDR", 11 0, v0x1e94690_0;
v0x1e93680_0 .alias "HCLK", 0 0, v0x1e94c00_0;
v0x1e8fff0_0 .alias "HRDATA", 31 0, v0x1e94730_0;
v0x1e93860_0 .alias "HREADY", 0 0, v0x1e947b0_0;
v0x1e93930_0 .alias "HREADYOUT", 0 0, v0x1e94830_0;
v0x1e93a00_0 .alias "HRESETn", 0 0, v0x1e94d00_0;
v0x1e93a80_0 .alias "HRESP", 0 0, v0x1e948b0_0;
v0x1e93b50_0 .alias "HSEL", 0 0, v0x1e94930_0;
v0x1e93c70_0 .alias "HSIZE", 2 0, v0x1e949b0_0;
v0x1e93d40_0 .alias "HTRANS", 1 0, v0x1e94a30_0;
v0x1e93dc0_0 .alias "HWDATA", 31 0, v0x1e94b00_0;
v0x1e93e90_0 .alias "HWRITE", 0 0, v0x1e94b80_0;
v0x1e93f60_0 .net "ahb_sram_addr", 11 0, L_0x1e955d0; 1 drivers
v0x1e93fe0_0 .net "ahb_sram_din", 31 0, L_0x1e95ef0; 1 drivers
v0x1e940e0_0 .net "ahb_sram_enb", 3 0, L_0x1e95d70; 1 drivers
v0x1e94160_0 .net "ahb_sram_wb", 3 0, L_0x1e957b0; 1 drivers
RS_0x7f84d4d37d98 .resolv tri, L_0x1e961b0, L_0x1e96500, L_0x1e96c10, L_0x1e97020;
v0x1e94060_0 .net8 "sram_ahb_dout", 31 0, RS_0x7f84d4d37d98; 4 drivers
L_0x1e961b0 .part/pv v0x1e90f10_0, 0, 8, 32;
L_0x1e96250 .part L_0x1e957b0, 0, 1;
L_0x1e962f0 .part L_0x1e95d70, 0, 1;
L_0x1e96390 .part L_0x1e955d0, 0, 10;
L_0x1e96430 .part L_0x1e95ef0, 0, 8;
L_0x1e96500 .part/pv v0x1e90820_0, 8, 8, 32;
L_0x1e96660 .part L_0x1e957b0, 1, 1;
L_0x1e96790 .part L_0x1e95d70, 1, 1;
L_0x1e968f0 .part L_0x1e955d0, 0, 10;
L_0x1e96a50 .part L_0x1e95ef0, 8, 8;
L_0x1e96c10 .part/pv v0x1e90130_0, 16, 8, 32;
L_0x1e96ce0 .part L_0x1e957b0, 2, 1;
L_0x1e96db0 .part L_0x1e95d70, 2, 1;
L_0x1e96e80 .part L_0x1e955d0, 0, 10;
L_0x1e96f50 .part L_0x1e95ef0, 16, 8;
L_0x1e97020 .part/pv v0x1e8f9b0_0, 24, 8, 32;
L_0x1e97180 .part L_0x1e957b0, 3, 1;
L_0x1e97250 .part L_0x1e95d70, 3, 1;
L_0x1e973c0 .part L_0x1e955d0, 0, 10;
L_0x1e97460 .part L_0x1e95ef0, 24, 8;
S_0x1e91130 .scope module, "U_AHB_TO_SSRAM" "ahb_to_ssram" 4 74, 5 33, S_0x1e8f3c0;
 .timescale -9 -12;
P_0x1e91228 .param/l "AHB_ADDRESS_PHASE" 5 47, +C4<01>;
P_0x1e91250 .param/l "AHB_DATA_PHASE" 5 48, +C4<010>;
P_0x1e91278 .param/l "AHB_IDLE_PHASE" 5 49, +C4<0>;
P_0x1e912a0 .param/l "AMBA_AHB_HSIZE_1024BITS" 6 45, C4<111>;
P_0x1e912c8 .param/l "AMBA_AHB_HSIZE_128BITS" 6 42, C4<100>;
P_0x1e912f0 .param/l "AMBA_AHB_HSIZE_16BITS" 6 39, C4<001>;
P_0x1e91318 .param/l "AMBA_AHB_HSIZE_256BITS" 6 43, C4<101>;
P_0x1e91340 .param/l "AMBA_AHB_HSIZE_32BITS" 6 40, C4<010>;
P_0x1e91368 .param/l "AMBA_AHB_HSIZE_512BITS" 6 44, C4<110>;
P_0x1e91390 .param/l "AMBA_AHB_HSIZE_64BITS" 6 41, C4<011>;
P_0x1e913b8 .param/l "AMBA_AHB_HSIZE_8BITS" 6 38, C4<000>;
P_0x1e913e0 .param/l "AMBA_AHB_HTRANS_BUSY" 6 34, C4<01>;
P_0x1e91408 .param/l "AMBA_AHB_HTRANS_IDLE" 6 33, C4<00>;
P_0x1e91430 .param/l "AMBA_AHB_HTRANS_NON_SEQ" 6 35, C4<10>;
P_0x1e91458 .param/l "AMBA_AHB_HTRANS_SEQ" 6 36, C4<11>;
P_0x1e91480 .param/l "AW" 5 43, +C4<01100>;
L_0x1e92250 .functor OR 1, v0x1e93310_0, v0x1e92ff0_0, C4<0>, C4<0>;
L_0x1e94fb0 .functor AND 1, L_0x1e92250, v0x1e8ef80_0, C4<1>, C4<1>;
L_0x1e950a0 .functor AND 1, L_0x1e94fb0, v0x1e8ed20_0, C4<1>, C4<1>;
L_0x1e95190 .functor NOT 1, v0x1e8f2b0_0, C4<0>, C4<0>, C4<0>;
L_0x1e95280 .functor AND 1, L_0x1e950a0, L_0x1e95190, C4<1>, C4<1>;
L_0x1e95310 .functor AND 1, L_0x1e92250, v0x1e8ef80_0, C4<1>, C4<1>;
L_0x1e95370 .functor AND 1, L_0x1e95310, v0x1e8ed20_0, C4<1>, C4<1>;
L_0x1e953d0 .functor AND 1, L_0x1e95370, v0x1e8f2b0_0, C4<1>, C4<1>;
L_0x1e954d0 .functor OR 1, L_0x1e95280, L_0x1e953d0, C4<0>, C4<0>;
L_0x1e95750 .functor OR 1, L_0x1e95280, v0x1e934c0_0, C4<0>, C4<0>;
L_0x1e95810 .functor BUFZ 1, v0x1e934c0_0, C4<0>, C4<0>, C4<0>;
L_0x1e95870 .functor AND 1, v0x1e934c0_0, L_0x1e95280, C4<1>, C4<1>;
L_0x1e957b0 .functor AND 4, v0x1e92f70_0, L_0x1e95b20, C4<1111>, C4<1111>;
L_0x1e95d70 .functor AND 4, v0x1e92f70_0, L_0x1e95cd0, C4<1111>, C4<1111>;
L_0x1e95ef0 .functor BUFZ 32, v0x1e8f210_0, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
L_0x1e96030 .functor BUFZ 32, RS_0x7f84d4d37d98, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>, C4<00000000000000000000000000000000>;
v0x1e91bf0_0 .alias "HADDR", 11 0, v0x1e94690_0;
v0x1e91ca0_0 .alias "HCLK", 0 0, v0x1e94c00_0;
v0x1e91d20_0 .alias "HRDATA", 31 0, v0x1e94730_0;
v0x1e91dd0_0 .alias "HREADY", 0 0, v0x1e947b0_0;
v0x1e91eb0_0 .alias "HREADYOUT", 0 0, v0x1e94830_0;
v0x1e91f60_0 .alias "HRESETn", 0 0, v0x1e94d00_0;
v0x1e92020_0 .alias "HRESP", 0 0, v0x1e948b0_0;
v0x1e920a0_0 .alias "HSEL", 0 0, v0x1e94930_0;
v0x1e92120_0 .alias "HSIZE", 2 0, v0x1e949b0_0;
v0x1e921d0_0 .alias "HTRANS", 1 0, v0x1e94a30_0;
v0x1e922e0_0 .alias "HWDATA", 31 0, v0x1e94b00_0;
v0x1e92390_0 .alias "HWRITE", 0 0, v0x1e94b80_0;
v0x1e924b0_0 .net *"_s10", 0 0, L_0x1e95310; 1 drivers
v0x1e92530_0 .net *"_s12", 0 0, L_0x1e95370; 1 drivers
v0x1e92630_0 .net *"_s2", 0 0, L_0x1e94fb0; 1 drivers
v0x1e926b0_0 .net *"_s24", 0 0, L_0x1e95870; 1 drivers
v0x1e925b0_0 .net *"_s28", 3 0, L_0x1e95b20; 1 drivers
v0x1e927c0_0 .net *"_s32", 3 0, L_0x1e95cd0; 1 drivers
v0x1e92730_0 .net *"_s4", 0 0, L_0x1e950a0; 1 drivers
v0x1e928e0_0 .net *"_s6", 0 0, L_0x1e95190; 1 drivers
v0x1e92840_0 .net "active_cycle", 0 0, L_0x1e92250; 1 drivers
v0x1e92a10_0 .alias "ahb_sram_addr", 11 0, v0x1e93f60_0;
v0x1e92960_0 .alias "ahb_sram_din", 31 0, v0x1e93fe0_0;
v0x1e92b50_0 .net "ahb_sram_en", 0 0, L_0x1e95750; 1 drivers
v0x1e92a90_0 .alias "ahb_sram_enb", 3 0, v0x1e940e0_0;
v0x1e92ca0_0 .alias "ahb_sram_wb", 3 0, v0x1e94160_0;
v0x1e92bd0_0 .net "ahb_sram_we", 0 0, L_0x1e95810; 1 drivers
v0x1e92e00_0 .var "busy_cycle", 0 0;
v0x1e92d20_0 .var "byte_sel_a", 3 0;
v0x1e92f70_0 .var "byte_sel_r", 3 0;
v0x1e92e80_0 .var "haddr_r", 11 0;
v0x1e930f0_0 .var "idle_cycle", 0 0;
v0x1e92ff0_0 .var "nonseq_cycle", 0 0;
v0x1e93070_0 .net "read_valid", 0 0, L_0x1e95280; 1 drivers
v0x1e93290_0 .net "rw_cycle", 0 0, L_0x1e954d0; 1 drivers
v0x1e93310_0 .var "seq_cycle", 0 0;
v0x1e93190_0 .alias "sram_ahb_dout", 31 0, v0x1e94060_0;
v0x1e934c0_0 .var "write_en_r", 0 0;
v0x1e93390_0 .net "write_valid", 0 0, L_0x1e953d0; 1 drivers
E_0x1e90ee0/0 .event negedge, v0x1e8d230_0;
E_0x1e90ee0/1 .event posedge, v0x1e75140_0;
E_0x1e90ee0 .event/or E_0x1e90ee0/0, E_0x1e90ee0/1;
E_0x1e91af0 .event edge, v0x1e93290_0, v0x1e8f070_0, v0x1e8eaf0_0;
E_0x1e91b40 .event edge, v0x1e8f110_0;
E_0x1e91b90 .event "byte_sel_update";
L_0x1e955d0 .functor MUXZ 12, v0x1e8eaf0_0, v0x1e92e80_0, v0x1e934c0_0, C4<>;
L_0x1e959f0 .reduce/nor L_0x1e95870;
L_0x1e95b20 .concat [ 1 1 1 1], v0x1e934c0_0, v0x1e934c0_0, v0x1e934c0_0, v0x1e934c0_0;
L_0x1e95cd0 .concat [ 1 1 1 1], L_0x1e95750, L_0x1e95750, L_0x1e95750, L_0x1e95750;
S_0x1e90a40 .scope module, "U_RAM0" "sync_ram_wf" 4 116, 7 33, S_0x1e8f3c0;
 .timescale -9 -12;
P_0x1e90b38 .param/l "ADDR_WIDTH" 7 41, +C4<01010>;
P_0x1e90b60 .param/l "WORD_WIDTH" 7 40, +C4<01000>;
v0x1e90ca0 .array "RAM", 0 2047, 7 0;
v0x1e90d40_0 .net "addr", 9 0, L_0x1e96390; 1 drivers
v0x1e90de0_0 .alias "clk", 0 0, v0x1e94c00_0;
v0x1e90e60_0 .net "din", 7 0, L_0x1e96430; 1 drivers
v0x1e90f10_0 .var "dout", 7 0;
v0x1e90fb0_0 .net "en", 0 0, L_0x1e962f0; 1 drivers
v0x1e91090_0 .net "we", 0 0, L_0x1e96250; 1 drivers
E_0x1e907f0 .event "write";
E_0x1e90c70 .event "read";
S_0x1e90350 .scope module, "U_RAM1" "sync_ram_wf" 4 129, 7 33, S_0x1e8f3c0;
 .timescale -9 -12;
P_0x1e90448 .param/l "ADDR_WIDTH" 7 41, +C4<01010>;
P_0x1e90470 .param/l "WORD_WIDTH" 7 40, +C4<01000>;
v0x1e905b0 .array "RAM", 0 2047, 7 0;
v0x1e90650_0 .net "addr", 9 0, L_0x1e968f0; 1 drivers
v0x1e906f0_0 .alias "clk", 0 0, v0x1e94c00_0;
v0x1e90770_0 .net "din", 7 0, L_0x1e96a50; 1 drivers
v0x1e90820_0 .var "dout", 7 0;
v0x1e908c0_0 .net "en", 0 0, L_0x1e96790; 1 drivers
v0x1e909a0_0 .net "we", 0 0, L_0x1e96660; 1 drivers
E_0x1e90100 .event "write";
E_0x1e90580 .event "read";
S_0x1e8fbd0 .scope module, "U_RAM2" "sync_ram_wf" 4 140, 7 33, S_0x1e8f3c0;
 .timescale -9 -12;
P_0x1e8fcc8 .param/l "ADDR_WIDTH" 7 41, +C4<01010>;
P_0x1e8fcf0 .param/l "WORD_WIDTH" 7 40, +C4<01000>;
v0x1e8fe30 .array "RAM", 0 2047, 7 0;
v0x1e8fed0_0 .net "addr", 9 0, L_0x1e96e80; 1 drivers
v0x1e8ff70_0 .alias "clk", 0 0, v0x1e94c00_0;
v0x1e90080_0 .net "din", 7 0, L_0x1e96f50; 1 drivers
v0x1e90130_0 .var "dout", 7 0;
v0x1e901d0_0 .net "en", 0 0, L_0x1e96db0; 1 drivers
v0x1e902b0_0 .net "we", 0 0, L_0x1e96ce0; 1 drivers
E_0x1e8f980 .event "write";
E_0x1e8fe00 .event "read";
S_0x1e8f530 .scope module, "U_RAM3" "sync_ram_wf" 4 151, 7 33, S_0x1e8f3c0;
 .timescale -9 -12;
P_0x1e8f198 .param/l "ADDR_WIDTH" 7 41, C4<01010>;
P_0x1e8f1c0 .param/l "WORD_WIDTH" 7 40, +C4<01000>;
v0x1e8f740 .array "RAM", 0 2047, 7 0;
v0x1e8f7e0_0 .net "addr", 9 0, L_0x1e973c0; 1 drivers
v0x1e8f880_0 .alias "clk", 0 0, v0x1e94c00_0;
v0x1e8f900_0 .net "din", 7 0, L_0x1e97460; 1 drivers
v0x1e8f9b0_0 .var "dout", 7 0;
v0x1e8fa50_0 .net "en", 0 0, L_0x1e97250; 1 drivers
v0x1e8fb30_0 .net "we", 0 0, L_0x1e97180; 1 drivers
E_0x1e8f6e0 .event "write";
E_0x1e8f710 .event "read";
S_0x1e8d530 .scope module, "U_AHB_DRIVER" "ahb_driver" 2 55, 8 33, S_0x1e25470;
 .timescale -9 -12;
P_0x1e8d628 .param/l "AMBA_AHB_HSIZE_1024BITS" 6 45, C4<111>;
P_0x1e8d650 .param/l "AMBA_AHB_HSIZE_128BITS" 6 42, C4<100>;
P_0x1e8d678 .param/l "AMBA_AHB_HSIZE_16BITS" 6 39, C4<001>;
P_0x1e8d6a0 .param/l "AMBA_AHB_HSIZE_256BITS" 6 43, C4<101>;
P_0x1e8d6c8 .param/l "AMBA_AHB_HSIZE_32BITS" 6 40, C4<010>;
P_0x1e8d6f0 .param/l "AMBA_AHB_HSIZE_512BITS" 6 44, C4<110>;
P_0x1e8d718 .param/l "AMBA_AHB_HSIZE_64BITS" 6 41, C4<011>;
P_0x1e8d740 .param/l "AMBA_AHB_HSIZE_8BITS" 6 38, C4<000>;
P_0x1e8d768 .param/l "AMBA_AHB_HTRANS_BUSY" 6 34, C4<01>;
P_0x1e8d790 .param/l "AMBA_AHB_HTRANS_IDLE" 6 33, C4<00>;
P_0x1e8d7b8 .param/l "AMBA_AHB_HTRANS_NON_SEQ" 6 35, C4<10>;
P_0x1e8d7e0 .param/l "AMBA_AHB_HTRANS_SEQ" 6 36, C4<11>;
P_0x1e8d808 .param/l "AW" 8 39, +C4<01100>;
v0x1e8eaf0_0 .var "HADDR", 11 0;
v0x1e8ebb0_0 .alias "HCLK", 0 0, v0x1e94c00_0;
v0x1e8ec80_0 .alias "HRDATA", 31 0, v0x1e94730_0;
v0x1e8ed20_0 .var "HREADY", 0 0;
v0x1e8eda0_0 .alias "HREADYOUT", 0 0, v0x1e94830_0;
v0x1e8ee40_0 .alias "HRESETn", 0 0, v0x1e94d00_0;
v0x1e8ef00_0 .alias "HRESP", 0 0, v0x1e948b0_0;
v0x1e8ef80_0 .var "HSEL", 0 0;
v0x1e8f070_0 .var "HSIZE", 2 0;
v0x1e8f110_0 .var "HTRANS", 1 0;
v0x1e8f210_0 .var "HWDATA", 31 0;
v0x1e8f2b0_0 .var "HWRITE", 0 0;
S_0x1e8e8a0 .scope task, "t_read32bits_non_seq" "t_read32bits_non_seq" 8 73, 8 73, S_0x1e8d530;
 .timescale -9 -12;
v0x1e8e990_0 .var "address", 11 0;
v0x1e8ea50_0 .var "data", 31 0;
TD_tb.U_AHB_DRIVER.t_read32bits_non_seq ;
    %set/v v0x1e8ef80_0, 1, 1;
    %load/v 8, v0x1e8e990_0, 12;
    %set/v v0x1e8eaf0_0, 8, 12;
    %set/v v0x1e8f2b0_0, 0, 1;
    %movi 8, 2, 2;
    %set/v v0x1e8f110_0, 8, 2;
    %movi 8, 2, 3;
    %set/v v0x1e8f070_0, 8, 3;
    %set/v v0x1e8ed20_0, 1, 1;
    %wait E_0x1e8de10;
    %delay 5000, 0;
    %set/v v0x1e8f2b0_0, 0, 1;
T_2.4 ;
    %load/v 8, v0x1e8eda0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_2.5, 8;
    %wait E_0x1e8de10;
    %jmp T_2.4;
T_2.5 ;
    %load/v 8, v0x1e8ec80_0, 32;
    %set/v v0x1e8ea50_0, 8, 32;
    %set/v v0x1e8ef80_0, 0, 1;
    %end;
S_0x1e8e650 .scope task, "t_read8bits_non_seq" "t_read8bits_non_seq" 8 97, 8 97, S_0x1e8d530;
 .timescale -9 -12;
v0x1e8e740_0 .var "address", 11 0;
v0x1e8e800_0 .var "data", 7 0;
TD_tb.U_AHB_DRIVER.t_read8bits_non_seq ;
    %set/v v0x1e8ef80_0, 1, 1;
    %load/v 8, v0x1e8e740_0, 12;
    %set/v v0x1e8eaf0_0, 8, 12;
    %set/v v0x1e8f2b0_0, 0, 1;
    %movi 8, 2, 2;
    %set/v v0x1e8f110_0, 8, 2;
    %set/v v0x1e8f070_0, 0, 3;
    %set/v v0x1e8ed20_0, 1, 1;
    %wait E_0x1e8de10;
    %delay 5000, 0;
    %set/v v0x1e8f2b0_0, 0, 1;
T_3.6 ;
    %load/v 8, v0x1e8eda0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_3.7, 8;
    %wait E_0x1e8de10;
    %jmp T_3.6;
T_3.7 ;
    %load/v 8, v0x1e8eaf0_0, 2; Only need 2 of 12 bits
; Save base=8 wid=2 in lookaside.
    %cmpi/u 8, 0, 2;
    %jmp/1 T_3.8, 6;
    %cmpi/u 8, 1, 2;
    %jmp/1 T_3.9, 6;
    %cmpi/u 8, 2, 2;
    %jmp/1 T_3.10, 6;
    %cmpi/u 8, 3, 2;
    %jmp/1 T_3.11, 6;
    %jmp T_3.13;
T_3.8 ;
    %load/v 8, v0x1e8ec80_0, 8; Only need 8 of 32 bits
; Save base=8 wid=8 in lookaside.
    %set/v v0x1e8e800_0, 8, 8;
    %jmp T_3.13;
T_3.9 ;
    %ix/load 1, 8, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.14, 4;
    %load/x1p 8, v0x1e8ec80_0, 8;
    %jmp T_3.15;
T_3.14 ;
    %mov 8, 2, 8;
T_3.15 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0x1e8e800_0, 8, 8;
    %jmp T_3.13;
T_3.10 ;
    %ix/load 1, 16, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.16, 4;
    %load/x1p 8, v0x1e8ec80_0, 8;
    %jmp T_3.17;
T_3.16 ;
    %mov 8, 2, 8;
T_3.17 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0x1e8e800_0, 8, 8;
    %jmp T_3.13;
T_3.11 ;
    %ix/load 1, 24, 0;
    %mov 4, 0, 1;
    %jmp/1 T_3.18, 4;
    %load/x1p 8, v0x1e8ec80_0, 8;
    %jmp T_3.19;
T_3.18 ;
    %mov 8, 2, 8;
T_3.19 ;
; Save base=8 wid=8 in lookaside.
    %set/v v0x1e8e800_0, 8, 8;
    %jmp T_3.13;
T_3.13 ;
    %set/v v0x1e8ef80_0, 0, 1;
    %end;
S_0x1e8e2b0 .scope task, "t_read_then_write_32bits" "t_read_then_write_32bits" 8 218, 8 218, S_0x1e8d530;
 .timescale -9 -12;
v0x1e8e3a0_0 .var "address1", 11 0;
v0x1e8e460_0 .var "address2", 11 0;
v0x1e8e500_0 .var "data1", 31 0;
v0x1e8e5a0_0 .var "data2", 31 0;
TD_tb.U_AHB_DRIVER.t_read_then_write_32bits ;
    %set/v v0x1e8ef80_0, 1, 1;
    %load/v 8, v0x1e8e3a0_0, 12;
    %set/v v0x1e8eaf0_0, 8, 12;
    %set/v v0x1e8f2b0_0, 0, 1;
    %movi 8, 2, 2;
    %set/v v0x1e8f110_0, 8, 2;
    %movi 8, 2, 3;
    %set/v v0x1e8f070_0, 8, 3;
    %set/v v0x1e8ed20_0, 1, 1;
    %wait E_0x1e8de10;
    %delay 5000, 0;
    %load/v 8, v0x1e8e460_0, 12;
    %set/v v0x1e8eaf0_0, 8, 12;
    %movi 8, 2, 2;
    %set/v v0x1e8f110_0, 8, 2;
    %movi 8, 2, 3;
    %set/v v0x1e8f070_0, 8, 3;
    %set/v v0x1e8ed20_0, 1, 1;
    %set/v v0x1e8f2b0_0, 1, 1;
T_4.20 ;
    %load/v 8, v0x1e8eda0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_4.21, 8;
    %wait E_0x1e8de10;
    %jmp T_4.20;
T_4.21 ;
    %load/v 8, v0x1e8ec80_0, 32;
    %set/v v0x1e8e500_0, 8, 32;
    %load/v 8, v0x1e8e5a0_0, 32;
    %set/v v0x1e8f210_0, 8, 32;
    %set/v v0x1e8f2b0_0, 0, 1;
T_4.22 ;
    %load/v 8, v0x1e8eda0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_4.23, 8;
    %wait E_0x1e8de10;
    %jmp T_4.22;
T_4.23 ;
    %delay 5000, 0;
    %set/v v0x1e8ef80_0, 0, 1;
    %end;
S_0x1e8e060 .scope task, "t_write32bits_non_seq" "t_write32bits_non_seq" 8 139, 8 139, S_0x1e8d530;
 .timescale -9 -12;
v0x1e8e150_0 .var "address", 11 0;
v0x1e8e210_0 .var "data", 31 0;
TD_tb.U_AHB_DRIVER.t_write32bits_non_seq ;
    %set/v v0x1e8ef80_0, 1, 1;
    %load/v 8, v0x1e8e150_0, 12;
    %set/v v0x1e8eaf0_0, 8, 12;
    %set/v v0x1e8f2b0_0, 1, 1;
    %movi 8, 2, 2;
    %set/v v0x1e8f110_0, 8, 2;
    %movi 8, 2, 3;
    %set/v v0x1e8f070_0, 8, 3;
    %set/v v0x1e8ed20_0, 1, 1;
    %wait E_0x1e8de10;
    %delay 5000, 0;
    %load/v 8, v0x1e8e210_0, 32;
    %set/v v0x1e8f210_0, 8, 32;
    %set/v v0x1e8f2b0_0, 0, 1;
T_5.24 ;
    %load/v 8, v0x1e8eda0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_5.25, 8;
    %wait E_0x1e8de10;
    %jmp T_5.24;
T_5.25 ;
    %delay 5000, 0;
    %set/v v0x1e8ef80_0, 0, 1;
    %end;
S_0x1e8dd20 .scope task, "t_write8bits_non_seq" "t_write8bits_non_seq" 8 168, 8 168, S_0x1e8d530;
 .timescale -9 -12;
v0x1e8de60_0 .var "address", 11 0;
v0x1e8df20_0 .var "data", 7 0;
v0x1e8dfc0_0 .var "word_to_be_written", 31 0;
E_0x1e8de10 .event posedge, v0x1e75140_0;
TD_tb.U_AHB_DRIVER.t_write8bits_non_seq ;
    %set/v v0x1e8ef80_0, 1, 1;
    %load/v 8, v0x1e8de60_0, 12;
    %set/v v0x1e8eaf0_0, 8, 12;
    %set/v v0x1e8f2b0_0, 1, 1;
    %movi 8, 2, 2;
    %set/v v0x1e8f110_0, 8, 2;
    %set/v v0x1e8f070_0, 0, 3;
    %set/v v0x1e8ed20_0, 1, 1;
    %wait E_0x1e8de10;
    %delay 5000, 0;
    %load/v 8, v0x1e8eaf0_0, 2; Only need 2 of 12 bits
; Save base=8 wid=2 in lookaside.
    %cmpi/u 8, 0, 2;
    %jmp/1 T_6.26, 6;
    %cmpi/u 8, 1, 2;
    %jmp/1 T_6.27, 6;
    %cmpi/u 8, 2, 2;
    %jmp/1 T_6.28, 6;
    %cmpi/u 8, 3, 2;
    %jmp/1 T_6.29, 6;
    %jmp T_6.31;
T_6.26 ;
    %load/v 8, v0x1e8df20_0, 8;
    %mov 16, 0, 24;
    %set/v v0x1e8dfc0_0, 8, 32;
    %jmp T_6.31;
T_6.27 ;
    %mov 8, 0, 8;
    %load/v 16, v0x1e8df20_0, 8;
    %mov 24, 0, 16;
    %set/v v0x1e8dfc0_0, 8, 32;
    %jmp T_6.31;
T_6.28 ;
    %mov 8, 0, 16;
    %load/v 24, v0x1e8df20_0, 8;
    %mov 32, 0, 8;
    %set/v v0x1e8dfc0_0, 8, 32;
    %jmp T_6.31;
T_6.29 ;
    %mov 8, 0, 24;
    %load/v 32, v0x1e8df20_0, 8;
    %set/v v0x1e8dfc0_0, 8, 32;
    %jmp T_6.31;
T_6.31 ;
    %load/v 8, v0x1e8dfc0_0, 32;
    %set/v v0x1e8f210_0, 8, 32;
    %set/v v0x1e8f2b0_0, 0, 1;
T_6.32 ;
    %load/v 8, v0x1e8eda0_0, 1;
    %inv 8, 1;
    %jmp/0xz T_6.33, 8;
    %wait E_0x1e8de10;
    %jmp T_6.32;
T_6.33 ;
    %delay 5000, 0;
    %set/v v0x1e8ef80_0, 0, 1;
    %end;
S_0x1e8d2d0 .scope module, "U_CLK_GEN" "clock_gen" 2 76, 9 33, S_0x1e25470;
 .timescale -9 -12;
P_0x1e8d3c8 .param/l "period" 9 37, +C4<01100100>;
v0x1e8d490_0 .var "clk", 0 0;
S_0x1e19e30 .scope module, "U_RESET_GEN" "reset_generator" 2 84, 10 4, S_0x1e25470;
 .timescale -9 -12;
v0x1e75140_0 .alias "clk", 0 0, v0x1e94c00_0;
v0x1e8d040_0 .net "rst_async", 0 0, v0x1e94c80_0; 1 drivers
v0x1e8d0e0_0 .var "rst_async_m", 0 0;
v0x1e8d180_0 .var "rst_async_r", 0 0;
v0x1e8d230_0 .alias "rst_n", 0 0, v0x1e94d00_0;
E_0x1e6ce50 .event negedge, v0x1e8d040_0, v0x1e75140_0;
    .scope S_0x1e91130;
T_7 ;
    %wait E_0x1e91b40;
    %set/v v0x1e93310_0, 0, 1;
    %set/v v0x1e92ff0_0, 0, 1;
    %set/v v0x1e92e00_0, 0, 1;
    %set/v v0x1e930f0_0, 0, 1;
    %load/v 8, v0x1e921d0_0, 2;
    %cmpi/u 8, 3, 2;
    %jmp/1 T_7.0, 6;
    %cmpi/u 8, 2, 2;
    %jmp/1 T_7.1, 6;
    %cmpi/u 8, 1, 2;
    %jmp/1 T_7.2, 6;
    %cmpi/u 8, 0, 2;
    %jmp/1 T_7.3, 6;
    %jmp T_7.4;
T_7.0 ;
    %set/v v0x1e93310_0, 1, 1;
    %jmp T_7.4;
T_7.1 ;
    %set/v v0x1e92ff0_0, 1, 1;
    %jmp T_7.4;
T_7.2 ;
    %set/v v0x1e92e00_0, 1, 1;
    %jmp T_7.4;
T_7.3 ;
    %set/v v0x1e930f0_0, 1, 1;
    %jmp T_7.4;
T_7.4 ;
    %jmp T_7;
    .thread T_7, $push;
    .scope S_0x1e91130;
T_8 ;
    %wait E_0x1e91af0;
    %set/v E_0x1e91b90, 0,1;
    %set/v v0x1e92d20_0, 1, 4;
    %load/v 8, v0x1e93290_0, 1;
    %jmp/0xz  T_8.0, 8;
    %load/v 8, v0x1e92120_0, 3;
    %cmpi/u 8, 0, 3;
    %jmp/1 T_8.2, 6;
    %cmpi/u 8, 1, 3;
    %jmp/1 T_8.3, 6;
    %cmpi/u 8, 2, 3;
    %jmp/1 T_8.4, 6;
    %set/v v0x1e92d20_0, 1, 4;
    %jmp T_8.6;
T_8.2 ;
    %load/v 8, v0x1e91bf0_0, 2; Only need 2 of 12 bits
; Save base=8 wid=2 in lookaside.
    %cmpi/u 8, 0, 2;
    %jmp/1 T_8.7, 6;
    %cmpi/u 8, 1, 2;
    %jmp/1 T_8.8, 6;
    %cmpi/u 8, 2, 2;
    %jmp/1 T_8.9, 6;
    %cmpi/u 8, 3, 2;
    %jmp/1 T_8.10, 6;
    %jmp T_8.12;
T_8.7 ;
    %movi 8, 1, 4;
    %set/v v0x1e92d20_0, 8, 4;
    %jmp T_8.12;
T_8.8 ;
    %movi 8, 2, 4;
    %set/v v0x1e92d20_0, 8, 4;
    %jmp T_8.12;
T_8.9 ;
    %movi 8, 4, 4;
    %set/v v0x1e92d20_0, 8, 4;
    %jmp T_8.12;
T_8.10 ;
    %movi 8, 8, 4;
    %set/v v0x1e92d20_0, 8, 4;
    %jmp T_8.12;
T_8.12 ;
    %jmp T_8.6;
T_8.3 ;
    %ix/load 1, 1, 0;
    %mov 4, 0, 1;
    %jmp/1 T_8.16, 4;
    %load/x1p 8, v0x1e91bf0_0, 1;
    %jmp T_8.17;
T_8.16 ;
    %mov 8, 2, 1;
T_8.17 ;
; Save base=8 wid=1 in lookaside.
    %jmp/0  T_8.13, 8;
    %movi 9, 12, 4;
    %jmp/1  T_8.15, 8;
T_8.13 ; End of true expr.
    %movi 13, 3, 4;
    %jmp/0  T_8.14, 8;
 ; End of false expr.
    %blend  9, 13, 4; Condition unknown.
    %jmp  T_8.15;
T_8.14 ;
    %mov 9, 13, 4; Return false value
T_8.15 ;
    %set/v v0x1e92d20_0, 9, 4;
    %jmp T_8.6;
T_8.4 ;
    %set/v v0x1e92d20_0, 1, 4;
    %jmp T_8.6;
T_8.6 ;
T_8.0 ;
    %jmp T_8;
    .thread T_8, $push;
    .scope S_0x1e91130;
T_9 ;
    %wait E_0x1e90ee0;
    %load/v 8, v0x1e91f60_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_9.0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1e92f70_0, 0, 0;
    %ix/load 0, 12, 0;
    %assign/v0 v0x1e92e80_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e934c0_0, 0, 0;
    %jmp T_9.1;
T_9.0 ;
    %load/v 8, v0x1e91dd0_0, 1;
    %load/v 9, v0x1e91eb0_0, 1;
    %and 8, 9, 1;
    %jmp/0xz  T_9.2, 8;
    %load/v 8, v0x1e92d20_0, 4;
    %ix/load 0, 4, 0;
    %assign/v0 v0x1e92f70_0, 0, 8;
    %load/v 8, v0x1e93390_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e934c0_0, 0, 8;
    %load/v 8, v0x1e91bf0_0, 12;
    %ix/load 0, 12, 0;
    %assign/v0 v0x1e92e80_0, 0, 8;
T_9.2 ;
T_9.1 ;
    %jmp T_9;
    .thread T_9;
    .scope S_0x1e90a40;
T_10 ;
    %wait E_0x1e8de10;
    %load/v 8, v0x1e90fb0_0, 1;
    %jmp/0xz  T_10.0, 8;
    %load/v 8, v0x1e91090_0, 1;
    %jmp/0xz  T_10.2, 8;
    %load/v 8, v0x1e90e60_0, 8;
    %ix/getv 3, v0x1e90d40_0;
    %jmp/1 t_0, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1e90ca0, 0, 8;
t_0 ;
    %load/v 8, v0x1e90e60_0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e90f10_0, 0, 8;
    %set/v E_0x1e907f0, 0,1;
    %jmp T_10.3;
T_10.2 ;
    %ix/getv 3, v0x1e90d40_0;
    %load/av 8, v0x1e90ca0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e90f10_0, 0, 8;
    %set/v E_0x1e90c70, 0,1;
T_10.3 ;
T_10.0 ;
    %jmp T_10;
    .thread T_10;
    .scope S_0x1e90350;
T_11 ;
    %wait E_0x1e8de10;
    %load/v 8, v0x1e908c0_0, 1;
    %jmp/0xz  T_11.0, 8;
    %load/v 8, v0x1e909a0_0, 1;
    %jmp/0xz  T_11.2, 8;
    %load/v 8, v0x1e90770_0, 8;
    %ix/getv 3, v0x1e90650_0;
    %jmp/1 t_1, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1e905b0, 0, 8;
t_1 ;
    %load/v 8, v0x1e90770_0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e90820_0, 0, 8;
    %set/v E_0x1e90100, 0,1;
    %jmp T_11.3;
T_11.2 ;
    %ix/getv 3, v0x1e90650_0;
    %load/av 8, v0x1e905b0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e90820_0, 0, 8;
    %set/v E_0x1e90580, 0,1;
T_11.3 ;
T_11.0 ;
    %jmp T_11;
    .thread T_11;
    .scope S_0x1e8fbd0;
T_12 ;
    %wait E_0x1e8de10;
    %load/v 8, v0x1e901d0_0, 1;
    %jmp/0xz  T_12.0, 8;
    %load/v 8, v0x1e902b0_0, 1;
    %jmp/0xz  T_12.2, 8;
    %load/v 8, v0x1e90080_0, 8;
    %ix/getv 3, v0x1e8fed0_0;
    %jmp/1 t_2, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1e8fe30, 0, 8;
t_2 ;
    %load/v 8, v0x1e90080_0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e90130_0, 0, 8;
    %set/v E_0x1e8f980, 0,1;
    %jmp T_12.3;
T_12.2 ;
    %ix/getv 3, v0x1e8fed0_0;
    %load/av 8, v0x1e8fe30, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e90130_0, 0, 8;
    %set/v E_0x1e8fe00, 0,1;
T_12.3 ;
T_12.0 ;
    %jmp T_12;
    .thread T_12;
    .scope S_0x1e8f530;
T_13 ;
    %wait E_0x1e8de10;
    %load/v 8, v0x1e8fa50_0, 1;
    %jmp/0xz  T_13.0, 8;
    %load/v 8, v0x1e8fb30_0, 1;
    %jmp/0xz  T_13.2, 8;
    %load/v 8, v0x1e8f900_0, 8;
    %ix/getv 3, v0x1e8f7e0_0;
    %jmp/1 t_3, 4;
    %ix/load 0, 8, 0; word width
    %ix/load 1, 0, 0; part off
    %assign/av v0x1e8f740, 0, 8;
t_3 ;
    %load/v 8, v0x1e8f900_0, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e8f9b0_0, 0, 8;
    %set/v E_0x1e8f6e0, 0,1;
    %jmp T_13.3;
T_13.2 ;
    %ix/getv 3, v0x1e8f7e0_0;
    %load/av 8, v0x1e8f740, 8;
    %ix/load 0, 8, 0;
    %assign/v0 v0x1e8f9b0_0, 0, 8;
    %set/v E_0x1e8f710, 0,1;
T_13.3 ;
T_13.0 ;
    %jmp T_13;
    .thread T_13;
    .scope S_0x1e8d2d0;
T_14 ;
    %delay 50000, 0;
    %load/v 8, v0x1e8d490_0, 1;
    %inv 8, 1;
    %set/v v0x1e8d490_0, 8, 1;
    %jmp T_14;
    .thread T_14;
    .scope S_0x1e8d2d0;
T_15 ;
    %set/v v0x1e8d490_0, 0, 1;
    %end;
    .thread T_15;
    .scope S_0x1e19e30;
T_16 ;
    %wait E_0x1e6ce50;
    %load/v 8, v0x1e8d040_0, 1;
    %cmpi/u 8, 0, 1;
    %jmp/0xz  T_16.0, 4;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e8d0e0_0, 0, 0;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e8d180_0, 0, 0;
    %jmp T_16.1;
T_16.0 ;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e8d0e0_0, 0, 1;
    %load/v 8, v0x1e8d0e0_0, 1;
    %ix/load 0, 1, 0;
    %assign/v0 v0x1e8d180_0, 0, 8;
T_16.1 ;
    %jmp T_16;
    .thread T_16;
    .scope S_0x1e25470;
T_17 ;
    %vpi_call 2 99 "$dumpfile", "tb.vcd";
    %vpi_call 2 100 "$dumpvars", 1'sb0, S_0x1e25470;
    %end;
    .thread T_17;
    .scope S_0x1e25470;
T_18 ;
    %set/v v0x1e94c80_0, 0, 1;
    %delay 100000, 0;
    %set/v v0x1e94c80_0, 1, 1;
    %wait E_0x1e8de10;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8e150_0, 8, 12;
    %movi 8, 3405691582, 32;
    %set/v v0x1e8e210_0, 8, 32;
    %fork TD_tb.U_AHB_DRIVER.t_write32bits_non_seq, S_0x1e8e060;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 20, 12;
    %set/v v0x1e8e150_0, 8, 12;
    %movi 8, 305419896, 32;
    %set/v v0x1e8e210_0, 8, 32;
    %fork TD_tb.U_AHB_DRIVER.t_write32bits_non_seq, S_0x1e8e060;
    %join;
    %wait E_0x1e8de10;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8e990_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read32bits_non_seq, S_0x1e8e8a0;
    %join;
    %load/v 8, v0x1e8ea50_0, 32;
    %set/v v0x1e94e10_0, 8, 32;
    %load/v 8, v0x1e94e10_0, 32;
    %set/v v0x1e945f0_0, 8, 32;
    %movi 8, 3405691582, 32;
    %set/v v0x1e94550_0, 8, 32;
    %fork TD_tb.check_32bits, S_0x1e94460;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 20, 12;
    %set/v v0x1e8e990_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read32bits_non_seq, S_0x1e8e8a0;
    %join;
    %load/v 8, v0x1e8ea50_0, 32;
    %set/v v0x1e94e10_0, 8, 32;
    %load/v 8, v0x1e94e10_0, 32;
    %set/v v0x1e945f0_0, 8, 32;
    %movi 8, 305419896, 32;
    %set/v v0x1e94550_0, 8, 32;
    %fork TD_tb.check_32bits, S_0x1e94460;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8de60_0, 8, 12;
    %movi 8, 85, 8;
    %set/v v0x1e8df20_0, 8, 8;
    %fork TD_tb.U_AHB_DRIVER.t_write8bits_non_seq, S_0x1e8dd20;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8e990_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read32bits_non_seq, S_0x1e8e8a0;
    %join;
    %load/v 8, v0x1e8ea50_0, 32;
    %set/v v0x1e94e10_0, 8, 32;
    %load/v 8, v0x1e94e10_0, 32;
    %set/v v0x1e945f0_0, 8, 32;
    %movi 8, 3405691477, 32;
    %set/v v0x1e94550_0, 8, 32;
    %fork TD_tb.check_32bits, S_0x1e94460;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 17, 12;
    %set/v v0x1e8de60_0, 8, 12;
    %movi 8, 170, 8;
    %set/v v0x1e8df20_0, 8, 8;
    %fork TD_tb.U_AHB_DRIVER.t_write8bits_non_seq, S_0x1e8dd20;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 18, 12;
    %set/v v0x1e8de60_0, 8, 12;
    %movi 8, 187, 8;
    %set/v v0x1e8df20_0, 8, 8;
    %fork TD_tb.U_AHB_DRIVER.t_write8bits_non_seq, S_0x1e8dd20;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 19, 12;
    %set/v v0x1e8de60_0, 8, 12;
    %movi 8, 204, 8;
    %set/v v0x1e8df20_0, 8, 8;
    %fork TD_tb.U_AHB_DRIVER.t_write8bits_non_seq, S_0x1e8dd20;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8e990_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read32bits_non_seq, S_0x1e8e8a0;
    %join;
    %load/v 8, v0x1e8ea50_0, 32;
    %set/v v0x1e94e10_0, 8, 32;
    %load/v 8, v0x1e94e10_0, 32;
    %set/v v0x1e945f0_0, 8, 32;
    %movi 8, 3434850901, 32;
    %set/v v0x1e94550_0, 8, 32;
    %fork TD_tb.check_32bits, S_0x1e94460;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8e740_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read8bits_non_seq, S_0x1e8e650;
    %join;
    %load/v 8, v0x1e8e800_0, 8;
    %set/v v0x1e94f10_0, 8, 8;
    %load/v 8, v0x1e94f10_0, 8;
    %set/v v0x1e943e0_0, 8, 8;
    %movi 8, 85, 8;
    %set/v v0x1e94360_0, 8, 8;
    %fork TD_tb.check_8bits, S_0x1e94270;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 17, 12;
    %set/v v0x1e8e740_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read8bits_non_seq, S_0x1e8e650;
    %join;
    %load/v 8, v0x1e8e800_0, 8;
    %set/v v0x1e94f10_0, 8, 8;
    %load/v 8, v0x1e94f10_0, 8;
    %set/v v0x1e943e0_0, 8, 8;
    %movi 8, 170, 8;
    %set/v v0x1e94360_0, 8, 8;
    %fork TD_tb.check_8bits, S_0x1e94270;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 18, 12;
    %set/v v0x1e8e740_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read8bits_non_seq, S_0x1e8e650;
    %join;
    %load/v 8, v0x1e8e800_0, 8;
    %set/v v0x1e94f10_0, 8, 8;
    %load/v 8, v0x1e94f10_0, 8;
    %set/v v0x1e943e0_0, 8, 8;
    %movi 8, 187, 8;
    %set/v v0x1e94360_0, 8, 8;
    %fork TD_tb.check_8bits, S_0x1e94270;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 19, 12;
    %set/v v0x1e8e740_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read8bits_non_seq, S_0x1e8e650;
    %join;
    %load/v 8, v0x1e8e800_0, 8;
    %set/v v0x1e94f10_0, 8, 8;
    %load/v 8, v0x1e94f10_0, 8;
    %set/v v0x1e943e0_0, 8, 8;
    %movi 8, 204, 8;
    %set/v v0x1e94360_0, 8, 8;
    %fork TD_tb.check_8bits, S_0x1e94270;
    %join;
    %wait E_0x1e8de10;
    %delay 3000, 0;
    %movi 8, 16, 12;
    %set/v v0x1e8e3a0_0, 8, 12;
    %movi 8, 20, 12;
    %set/v v0x1e8e460_0, 8, 12;
    %movi 8, 3735928559, 32;
    %set/v v0x1e8e5a0_0, 8, 32;
    %fork TD_tb.U_AHB_DRIVER.t_read_then_write_32bits, S_0x1e8e2b0;
    %join;
    %load/v 8, v0x1e8e500_0, 32;
    %set/v v0x1e94e10_0, 8, 32;
    %load/v 8, v0x1e94e10_0, 32;
    %set/v v0x1e945f0_0, 8, 32;
    %movi 8, 3434850901, 32;
    %set/v v0x1e94550_0, 8, 32;
    %fork TD_tb.check_32bits, S_0x1e94460;
    %join;
    %movi 8, 20, 12;
    %set/v v0x1e8e990_0, 8, 12;
    %fork TD_tb.U_AHB_DRIVER.t_read32bits_non_seq, S_0x1e8e8a0;
    %join;
    %load/v 8, v0x1e8ea50_0, 32;
    %set/v v0x1e94e10_0, 8, 32;
    %load/v 8, v0x1e94e10_0, 32;
    %set/v v0x1e945f0_0, 8, 32;
    %movi 8, 305419896, 32;
    %set/v v0x1e94550_0, 8, 32;
    %fork TD_tb.check_32bits, S_0x1e94460;
    %join;
    %wait E_0x1e8de10;
    %delay 1000000, 0;
    %vpi_call 2 182 "$display", "-I- Done !";
    %vpi_call 2 183 "$finish";
    %end;
    .thread T_18;
    .scope S_0x1e25470;
T_19 ;
    %delay 100000000, 0;
    %vpi_call 2 189 "$display", "-E- Error (watchdog) !";
    %vpi_call 2 190 "$finish";
    %end;
    .thread T_19;
# The file index is used to find the file name in the following table.
:file_names 11;
    "N/A";
    "<interactive>";
    "tb.v";
    "./useful_tasks.v";
    "chip.v";
    "../rtl/ahb_to_ssram.v";
    "./ahb_params.v";
    "sync_ram_wf.v";
    "ahb_driver.v";
    "clock_gen.v";
    "reset_generator.v";
